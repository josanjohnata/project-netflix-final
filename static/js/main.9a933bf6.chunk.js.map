{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/img/Netflix-Logo.png","components/Header.js","App.js","index.js"],"names":["apiKey","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","descr","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","number_of_season","href","id","join","black","NetflixLogo","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setblackHeader","useEffect","Tmdb","list","originals","filter","randonChosen","floor","random","chosen","chosenInfo","loadAll","scrollListener","scrollY","addEventListener","removeEventListener","role","aria-label","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9a933bf6.chunk.js","sourcesContent":["const apiKey = '665f552eaaeef800e041a40916688ea3';\nconst apiBaseUrl = 'https://api.themoviedb.org/3';\n\n\nconst basicFetch = async (endpoint) => {\n  const req = await fetch(`${apiBaseUrl}${endpoint}`);\n  const json = await req.json();\n  return json;\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getHomeList: async () => {\n    return [\n      {\n        slug: 'originals',\n        title: 'Originais do Netflix',\n        items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${apiKey}`)\n      },\n      {\n        slug: 'trending',\n        title: 'Recomendados para Você',\n        items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${apiKey}`)\n      },\n      {\n        slug: 'toprated',\n        title: 'Em Alta',\n        items:  await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${apiKey}`)\n      },\n      {\n        slug: 'action',\n        title: 'Ação',\n        items:  await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${apiKey}`)\n      },\n      {\n        slug: 'comedy',\n        title: 'Comédia',\n        items:  await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${apiKey}`)\n      },\n      {\n        slug: 'horror',\n        title: 'Terror',\n        items:  await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${apiKey}`)\n      },\n      {\n        slug: 'romance',\n        title: 'Romance',\n        items:  await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${apiKey}`)\n      },\n      {\n        slug: 'documentary',\n        title: 'Documentários',\n        items:  await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${apiKey}`)\n      },\n    ];\n  },\n  \n  getMovieInfo: async (movieId, type) => {\n    let info = {};\n    if(movieId) {\n      // eslint-disable-next-line default-case\n      switch(type) {\n        case 'movie':\n          info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${apiKey}`);\n        break;\n        case 'tv':\n          info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${apiKey}`);\n        break;\n        default:\n          // eslint-disable-next-line no-unused-vars\n          info = null;\n        break;\n      }\n    }\n    return info;\n  }\n}\n","import React, { useState } from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({title, items}) => {\n  const [scrollX, setScrollX]= useState(0);\n  \n  const handleLeftArrow = () => {\n    let x = scrollX + Math.round(window.innerWidth / 2);\n        if(x > 0){\n            x = 0;\n        }\n        setScrollX(x);\n  }\n\n  const handleRightArrow = () =>{\n    let x = scrollX - Math.round(window.innerWidth / 2);\n    let listW = items.results.length * 150;\n    if((window.innerWidth - listW) > x) {\n        x = (window.innerWidth - listW) - 60;\n    }\n    setScrollX(x);\n}\n\n  return (\n    <div className=\"MovieRow\" >\n      <h2>{title}</h2>\n        <div className=\"movieRow-left\" onClick={handleLeftArrow}>\n          <NavigateBeforeIcon style={{fontSize: 50}} />\n        </div>\n        <div className=\"movieRow-right\" onClick={handleRightArrow}>\n          <NavigateNextIcon style={{fontSize: 50}} />\n        </div>\n\n      <div className=\"movieRow-listarea\" style={{\n                    marginLeft :scrollX,\n                    width: items.results.length * 150\n                }}>\n        <div className=\"movieRow-list\">\n          {items.results.length > 0 && items.results.map((item, key)=>(\n            <div key={key} className=\"movieRow-item\">\n              <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}","import React from 'react';\nimport './FeaturedMovie.css';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({item}) => {\n\n  let firstDate = new Date(item.first_air_date);\n\n  let genres = [];\n  for(let i in item.genres){\n      genres.push(item.genres[i].name);\n  }\n\n  let descr = item.overview;\n  if(descr.length > 200){\n      descr = descr.substring(0, 200)  + '...';\n   }\n\n\n  return (\n      <section className=\"featured\" style={{\n          backgroundSize: 'cover',\n          backgroundPosition: 'center',\n          backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n      }}>\n          <div className=\"featured--vertical\">\n              <div className=\"featured--horizontal\">\n                  <div className=\"featured--name\">{item.original_name}</div>\n                  <div className=\"featured--info\">\n                      <div className=\"featured--points\">{item.vote_average} pontos</div>\n                      <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                      <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_season !== 1 ? 's' : ''}</div>\n                  </div>\n                      <div className=\"featured--description\">{descr}</div>\n                      <div className=\"featured--buttons\">\n                          <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\n                          <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\n                      </div>\n                      <div className=\"featured--genres\">Gêneros: <strong> {genres.join(', ')} </strong></div>\n\n              </div>\n          </div>\n     \n      </section>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/Netflix-Logo.ac27d71a.png\";","import React from 'react';\nimport './Header.css';\nimport NetflixLogo from'./img/Netflix-Logo.png';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default ({black})=>{\n  return(\n      <header className={black ?\"black\" : ''}>\n          <div className=\"header--logo\">\n          <a href=\"/\">\n            <img src={NetflixLogo} alt=\"Netflix logo\" />\n          </a>\n          </div>\n          <div className=\"header--user\">\n              <img src=\"https://pbs.twimg.com/profile_images/1240119990411550720/hBEe3tdn_400x400.png\"/>\n          </div>\n      </header>\n  )\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Tmdb from './Tmdb';\nimport MovieRow from './components/MovieRow';\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default () =>{\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData]= useState(null);\n  const [blackHeader, setblackHeader]= useState(false);\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      let originals = list.filter(i=> i.slug === 'originals');\n      let randonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randonChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n\n    loadAll();\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () =>{\n        if(window.scrollY > 10){\n          setblackHeader(true);\n        }else{\n          setblackHeader(false);\n        }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () =>{\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  return(\n    <div className=\"page\">\n\n      <Header black={blackHeader}/>\n\n      {featuredData && \n        <FeaturedMovie item ={featuredData}/>\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) =>(\n          <MovieRow key={key} title={item.title} items={item.items}></MovieRow>\n        ))\n\n        }\n      </section>\n      <footer>\n        Feito com <span role=\"img\" aria-label=\"coração\">❤️</span> por Johnata Pontes<br/>\n        Para estudo de react, todos os direitos das imagens são da Netflix.<br/>\n        Dados extraídos do site Themoviedb.org\n      </footer>\n\n\n    {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src=\"https://cdn.lowgif.com/small/0534e2a412eeb281-the-counterintuitive-tech-behind-netflix-s-worldwide.gif\" alt=\"loading\"></img>\n      </div>\n    }\n    </div>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}